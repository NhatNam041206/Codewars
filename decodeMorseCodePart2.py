MORSE_CODE={'.-': 'A', '-...': 'B', '-.-.': 'C', '-..': 'D', '.': 'E', '..-.': 'F', '--.': 'G', '....': 'H', '..': 'I', '.---': 'J', '-.-': 'K', '.-..': 'L', '--': 'M', '-.': 'N', '---': 'O', '.--.': 'P', '--.-': 'Q', '.-.': 'R', '...': 'S', '-': 'T', '..-': 'U', '...-': 'V', '.--': 'W', '-..-': 'X', '-.--': 'Y', '--..': 'Z', '-----': '0', '.----': '1', '..---': '2', '...--': '3', '....-': '4', '.....': '5', '-....': '6', '--...': '7', '---..': '8', '----.': '9', '.-.-.-': '.', '--..--': ',', '..--..': '?', '.----.': "'", '-.-.--': '!', '-..-.': '/', '-.--.': '(', '-.--.-': ')', '.-...': '&', '---...': ':', '-.-.-.': ';', '-...-': '=', '.-.-.': '+', '-....-': '-', '..--.-': '_', '.-..-.': '"', '...-..-': '$', '.--.-.': '@', '...---...': 'SOS'}
#Still working onn.....

def decode_bits(bits):
    # ToDo: Accept 0's and 1's, return dots, dashes and spaces
    c0,c1=0,0 #Count 1 and 2
    result=[]
    for i in bits:
        check=True
        if i=='0':
            c0+=1
            if not c1%6:
                result.append('-')
                check=False
            if not c1%2 and check:
                result.append('.')

            c1=0
        elif i=='1':
            if c0==6: result.append(' ')
            elif c0==14: result.append('   ')
            c1+=1
            c0=0
    if c1>0:
            if c1==2:
                result.append('.')
            elif c1==6:
                result.append('-')
    return ''.join(result)
        

def decode_morse(morse_code):
    morse_code=morse_code.split(' ')
    c=0
    result=''
    for i in morse_code:
        if i=='': c+=1
        if c==2: 
            result+=' '
            c=0
        if i!='':
            result+=MORSE_CODE[i]
    return result.strip()
print(decode_bits('1100110011001100000011000000111111001100111111001111110000000000000011001111110011111100111111000000110011001111110000001111110011001100000011'))
print(decode_morse(decode_bits('1100110011001100000011000000111111001100111111001111110000000000000011001111110011111100111111000000110011001111110000001111110011001100000011')))